// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dic

import (
	"github.com/zerops-dev/di/app"
)

import (
	_ "golang.org/x/tools/imports"
)

// Injectors from container.go:

//go:generate wire
func CreateApp(applicationSetup *app.ApplicationSetup, config Config) (*App, error) {
	nameServerConfig7 := GetNameServerConfig7(config)
	nameLoggerConfig1 := GetNameLoggerConfig1(config)
	nameSlogLogger0 := GetNameSlogLogger0(nameLoggerConfig1)
	nameAppRunnerHandler2 := GetNameAppRunnerHandler2(nameSlogLogger0)
	nameAppRunnerRegister3 := GetNameAppRunnerRegister3(nameAppRunnerHandler2)
	nameServerHandler4, err := GetNameServerHandler4(nameServerConfig7, nameSlogLogger0, nameAppRunnerRegister3)
	if err != nil {
		return nil, err
	}
	nameHandlersIdentity5 := GetNameHandlersIdentity5()
	dicSetter_0_Value, err := getSetter_0_Value(nameHandlersIdentity5)
	if err != nil {
		return nil, err
	}
	dicSetter_0 := setSetter_0(nameServerHandler4, dicSetter_0_Value)
	nameHandlersReverse6 := GetNameHandlersReverse6()
	dicSetter_1_Value, err := getSetter_1_Value(nameHandlersReverse6)
	if err != nil {
		return nil, err
	}
	dicSetter_1 := setSetter_1(nameServerHandler4, dicSetter_1_Value)
	dicApp := NewApplication(applicationSetup, dicSetter_0, dicSetter_1, nameSlogLogger0, nameAppRunnerHandler2, nameAppRunnerRegister3, nameServerHandler4, nameHandlersIdentity5, nameHandlersReverse6)
	return dicApp, nil
}
